{"ast":null,"code":"var _jsxFileName = \"/Users/olivialacyatkinson/Desktop/udemy_course/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: '1a',\n        name: 'Max',\n        age: 28\n      }, {\n        id: '2b',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: '3c',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.nameChangeHandler = (e, id) => {\n      const person = this.state.persons.findIndex();\n      this.setState({\n        persons: [{\n          name: 'max',\n          age: 28\n        }, {\n          name: e.target.value,\n          age: 29\n        }, {\n          name: 'Stephanie',\n          age: 26\n        }]\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons; // if doesShow is false then showPersons is true\n\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const switchNameButtonStyle = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    var persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person //pointing to areas to get data\n        , {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: e => this.nameChangeHandler(e, person.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }));\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Hi, I'm a React App\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"This is really working!\"), React.createElement(\"button\", {\n      style: switchNameButtonStyle,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Toggle Persons\"), persons); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/olivialacyatkinson/Desktop/udemy_course/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","nameChangeHandler","e","person","findIndex","setState","target","value","deletePersonHandler","personIndex","splice","togglePersonsHandler","doesShow","render","switchNameButtonStyle","backgroundColor","font","border","padding","cursor","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: '1a', name: 'Max', age: 28 },\n      { id: '2b', name: 'Manu', age: 29 },\n      { id: '3c', name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    showPersons: false\n  }\n\n  nameChangeHandler = (e, id) => {\n    const person = this.state.persons.findIndex();\n\n    this.setState( {\n      persons: [\n        { name: 'max', age: 28 },\n        { name: e.target.value, age: 29 },\n        { name: 'Stephanie', age: 26 }\n      ]\n    } )\n  }\n\n  deletePersonHandler = (personIndex) => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1)\n    this.setState({\n      persons: persons\n    });\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    // if doesShow is false then showPersons is true\n    this.setState({\n      showPersons: !doesShow\n    })\n  }\n\n  render () {\n    const switchNameButtonStyle = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n\n    var persons = null;\n    \n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return <Person\n            //pointing to areas to get data\n              click={() => this.deletePersonHandler(index)}\n              name={person.name}\n              age={person.age}\n              key={person.id}\n              changed={(e) => this.nameChangeHandler(e, person.id)}\n            /> \n          })}\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p>This is really working!</p>\n        {/* passing a event handler/function to a component */}\n        <button \n          style={switchNameButtonStyle}\n          onClick={this.togglePersonsHandler}>Toggle Persons</button>\n\n        {persons}\n      </div>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}