{"ast":null,"code":"var _jsxFileName = \"/Users/olivialacyatkinson/Desktop/udemy_course/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: \"1a\",\n        name: \"Max\",\n        age: 28\n      }, {\n        id: \"2b\",\n        name: \"Manu\",\n        age: 29\n      }, {\n        id: \"3c\",\n        name: \"Stephanie\",\n        age: 26\n      }],\n      otherState: \"some other value\",\n      showPersons: false\n    };\n\n    this.nameChangeHandler = (e, id) => {\n      //storing index of every person\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      }); //get person by accessing the element person index,\n      //storing inside the new js object by using spread operator\n\n      const person = { ...this.state.persons[personIndex]\n      }; //updating the persons name\n\n      person.name = e.target.value; //update the array, reaching to the state persons.\n\n      const persons = [...this.state.persons]; //update the personIndex in the array with equlaing it to person object.\n\n      persons[personIndex] = person; //updating state using a mutated copied array\n\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons; // if doesShow is false then showPersons is true\n\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const switchNameButtonStyle = {\n      backgroundColor: \"green\",\n      color: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\"\n    };\n    var persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person //pointing to areas to get data\n        , {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: e => this.nameChangeHandler(e, person.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      }));\n      switchNameButtonStyle.backgroundColor = \"red\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Hi, I'm a React App\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"This is really working!\"), React.createElement(\"button\", {\n      style: switchNameButtonStyle,\n      onClick: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Toggle Persons\"), persons); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/olivialacyatkinson/Desktop/udemy_course/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","nameChangeHandler","e","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","render","switchNameButtonStyle","backgroundColor","color","font","border","padding","cursor","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: \"1a\", name: \"Max\", age: 28 },\n      { id: \"2b\", name: \"Manu\", age: 29 },\n      { id: \"3c\", name: \"Stephanie\", age: 26 }\n    ],\n    otherState: \"some other value\",\n    showPersons: false\n  };\n\n  //updating state without mutating it directly.\n  //only update state for the input field that has been changed.\n  nameChangeHandler = (e, id) => {\n    //storing index of every person\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    //get person by accessing the element person index,\n    //storing inside the new js object by using spread operator\n    const person = { ...this.state.persons[personIndex] };\n\n    //updating the persons name\n    person.name = e.target.value;\n\n    //update the array, reaching to the state persons.\n    const persons = [...this.state.persons];\n    //update the personIndex in the array with equlaing it to person object.\n    persons[personIndex] = person;\n\n    //updating state using a mutated copied array\n    this.setState({ persons: persons });\n  };\n\n  deletePersonHandler = personIndex => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({\n      persons: persons\n    });\n  };\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    // if doesShow is false then showPersons is true\n    this.setState({\n      showPersons: !doesShow\n    });\n  };\n\n  render() {\n    const switchNameButtonStyle = {\n      backgroundColor: \"green\",\n      color: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\"\n    };\n\n    var persons = null;\n\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return (\n              <Person\n                //pointing to areas to get data\n                click={() => this.deletePersonHandler(index)}\n                name={person.name}\n                age={person.age}\n                key={person.id}\n                changed={e => this.nameChangeHandler(e, person.id)}\n              />\n            );\n          })}\n        </div>\n      );\n      switchNameButtonStyle.backgroundColor = \"red\";\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p>This is really working!</p>\n        {/* passing a event handler/function to a component */}\n        <button\n          style={switchNameButtonStyle}\n          onClick={this.togglePersonsHandler}\n        >\n          Toggle Persons\n        </button>\n\n        {persons}\n      </div>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}